/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ProcessoDTOInput;
import io.swagger.client.model.ProcessoDTOOutput;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProcessoControllerApi
 */
@Ignore
public class ProcessoControllerApiTest {

    private final ProcessoControllerApi api = new ProcessoControllerApi();

    
    /**
     * create
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUsingPOST2Test() throws ApiException {
        ProcessoDTOInput processoDTO = null;
        ProcessoDTOOutput response = api.createUsingPOST2(processoDTO);

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsingDELETE2Test() throws ApiException {
        Long id = null;
        api.deleteUsingDELETE2(id);

        // TODO: test validations
    }
    
    /**
     * findAll
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findAllUsingGET2Test() throws ApiException {
        String cdAssuntoDescricao = null;
        String chaveProcesso = null;
        Long nuProcesso = null;
        List<ProcessoDTOOutput> response = api.findAllUsingGET2(cdAssuntoDescricao, chaveProcesso, nuProcesso);

        // TODO: test validations
    }
    
    /**
     * find
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUsingGET2Test() throws ApiException {
        Long id = null;
        ProcessoDTOOutput response = api.findUsingGET2(id);

        // TODO: test validations
    }
    
    /**
     * update
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPUT2Test() throws ApiException {
        Long id = null;
        ProcessoDTOInput processoDTO = null;
        api.updateUsingPUT2(id, processoDTO);

        // TODO: test validations
    }
    
}
